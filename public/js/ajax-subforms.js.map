{"version":3,"file":"/js/ajax-subforms.js","mappings":"MAOA,IAAIA,EASJ,SAASC,IAGL,IAAIC,EAAWC,EAAE,iBACO,IAApBD,EAASE,SAKbF,EAASG,IAAI,UACbH,EAASI,GAAG,UAAU,SAAUC,GAK5B,GAFkBJ,EAAEK,MAAMC,KAAK,YAK3B,OAAO,EAKXC,OAAOC,6BAA8B,EACrCJ,EAAEK,kBAGFZ,EAAkBG,EAAEK,OACJK,KAAK,iBAAiBC,OACtCd,EAAgBa,KAAK,qBAAqBE,OAG1C,IAAIC,EAAW,IAAIC,SAAST,MAC5BL,EAAEe,KAAK,CACHC,IAAKhB,EAAEK,MAAMC,KAAK,UAClBW,OAAQjB,EAAEK,MAAMC,KAAK,UACrBY,KAAML,EACNM,OAAO,EACPC,aAAa,EACbC,aAAa,EACbC,OAAO,IACRC,MAAK,WAEJ1B,EAAgBS,KAAK,YAAY,GACjCT,EAAgBK,IAAI,UAGpBL,EAAgB2B,QACpB,IAAGC,MAAK,SAAUC,GASd,GANA7B,EAAgBa,KAAK,gBAAgBiB,YAAY,eACjD9B,EAAgBa,KAAK,gBAAgBkB,SAKlB,MAAfF,EAAIG,OAGJ,OAFAtB,OAAOuB,UAAUJ,EAAIK,aAAaC,QAAS,oBAC3CC,EAA4BpC,GAKb,MAAf6B,EAAIG,SACJ7B,EAAE,0BAA0BY,OAC5BqB,EAA4BpC,IAIhC,IAAIqC,EAASR,EAAIK,aAAaG,OAE1BC,EAAYC,OAAOC,KAAKH,GAE5BC,EAAUG,SAAQ,SAAUC,GACJvC,EAAE,UAAYuC,EAAI,MAEpBtC,OAAS,EACvBJ,EAAgBa,KAAK,UAAY6B,EAAI,MAAMC,SAAS,eAC/CC,SACAC,OAAO,4BAA8BR,EAAOK,GAAG,GAAK,WAExC,CAEzB,IAEA,IAAII,EAAYP,OAAOC,KAAKH,GAAQ,GAChCU,EAAe/C,EAAgBa,KAAK,UAAYiC,EAAY,MAG5DC,EAAa3C,OAAS,GACtB2C,EAAaC,QAIjBZ,EAA4BpC,EAChC,GACJ,IACJ,CAEA,SAASoC,EAA4Ba,GAGjCA,EAAKpC,KAAK,iBAAiBE,OAC3BkC,EAAKpC,KAAK,qBAAqBC,MACnC,CAjHAX,EAAE+C,UAAUC,OAAM,WACdlD,IAEAE,EAAE+C,UAAU5C,GAAG,mCAAmC,WAC9CL,GACJ,GACJ,G","sources":["webpack:///./resources/assets/js/ajax-subforms.js"],"sourcesContent":["/**\n * Contains standard ajax process for forms.\n *\n * Wartning /!\\ : This will replace submit events on the form itself!\n * Usage: <form> tag must have class : 'ajax-subforms'\n *        Submit button or button group must be enclosed in a <div> that has the class : 'submit-group'\n */\nvar currentAjaxForm;\n$(document).ready(function () {\n    initSubforms();\n\n    $(document).on('shown.bs.modal shown.bs.popover', function () {\n        initSubforms();\n    });\n});\n\nfunction initSubforms() {\n    //console.info('Init Ajax Subforms');\n\n    let subForms = $('.ajax-subform');\n    if (subForms.length === 0) {\n        //console.info('not ajax subforms');\n        return;\n    }\n    //remove current submit event just in case it isn't clear\n    subForms.off('submit');\n    subForms.on('submit', function (e) {\n        //console.log('Ajax subform submitted', $(this));\n        //Get the validity status of the form\n        let formIsValid = $(this).attr('is-valid');\n        //console.log(\"Form validity\", formIsValid);\n        if (formIsValid) {\n            //console.log(\"Ajax subform already validated, sending\", $(this));\n            //do nothing and send form\n            return true;\n        }\n        //else form is not confirmed valid\n\n        //disable global alert when redirection occurs\n        window.entityFormHasUnsavedChanges = false;\n        e.preventDefault();\n\n        //show button animation\n        currentAjaxForm = $(this);\n        currentAjaxForm.find('.submit-group').hide();\n        currentAjaxForm.find('.submit-animation').show();\n\n        //send request to server\n        let formData = new FormData(this);\n        $.ajax({\n            url: $(this).attr('action'),\n            method: $(this).attr('method'),\n            data: formData,\n            cache: false,\n            contentType: false,\n            processData: false,\n            async: false\n        }).done(function () {\n            // If the validation succeeded, confirm its validity\n            currentAjaxForm.attr('is-valid', true);\n            currentAjaxForm.off('submit');\n            //console.log('form is valid?', currentAjaxForm, currentAjaxForm.attr('is-valid'));\n            // resubmit the form\n            currentAjaxForm.submit();\n        }).fail(function (err) {\n            //console.log('error', err);\n            // Reset any error fields\n            currentAjaxForm.find('.input-error').removeClass('input-error');\n            currentAjaxForm.find('.text-danger').remove();\n\n            // /?\\ how do the 503/403 error ids work ?\n            // If we have a 503 error status, let's assume it's from cloudflare and help the user\n            // properly save their data.\n            if (err.status === 503) {\n                window.showToast(err.responseJSON.message, 'toast-error');\n                resetSubformSubmitAnimation(currentAjaxForm);\n                return;\n            }\n\n            // If it's 403, the session is gone\n            if (err.status === 403) {\n                $('#entity-form-403-error').show();\n                resetSubformSubmitAnimation(currentAjaxForm);\n            }\n\n            // Loop through the errors to add the class and error message\n            let errors = err.responseJSON.errors;\n\n            let errorKeys = Object.keys(errors);\n            let foundAllErrors = true;\n            errorKeys.forEach(function (i) {\n                let errorSelector = $('[name=\"' + i + '\"]');\n                //console.log('error field', '[name=\"' + i + '\"]');\n                if (errorSelector.length > 0) {\n                    currentAjaxForm.find('[name=\"' + i + '\"]').addClass('input-error')\n                        .parent()\n                        .append('<div class=\"text-danger\">' + errors[i][0] + '</div>');\n                } else {\n                    foundAllErrors = false;\n                }\n            });\n\n            let firstItem = Object.keys(errors)[0];\n            let firstItemDom = currentAjaxForm.find('[name=\"' + firstItem + '\"]');\n\n            // If we can actually find the first element, switch to it and the correct tab.\n            if (firstItemDom.length > 0) {\n                firstItemDom.focus();\n            }\n\n            // Reset submit buttons\n            resetSubformSubmitAnimation(currentAjaxForm);\n        });\n    });\n}\n\nfunction resetSubformSubmitAnimation(form) {\n    //console.log(\"Resetting ajax subform animation\");\n    //reset animation\n    form.find('.submit-group').show();\n    form.find('.submit-animation').hide();\n}\n"],"names":["currentAjaxForm","initSubforms","subForms","$","length","off","on","e","this","attr","window","entityFormHasUnsavedChanges","preventDefault","find","hide","show","formData","FormData","ajax","url","method","data","cache","contentType","processData","async","done","submit","fail","err","removeClass","remove","status","showToast","responseJSON","message","resetSubformSubmitAnimation","errors","errorKeys","Object","keys","forEach","i","addClass","parent","append","firstItem","firstItemDom","focus","form","document","ready"],"sourceRoot":""}